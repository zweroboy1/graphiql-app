{
  "WelcomePage_p1": "Добро пожаловать в песочницу GraphQL, предлагающую универсальную площадку для различных API!",
  "WelcomePage_p2": "Экспериментируйте с интерфейсами GraphQL и взаимодействуйте с данными в режиме реального времени.",
  "WelcomePage_p3": "Исследуйте информацию, такую как имена, типы, функции и статистика, адаптированная для каждого конкретного API.",
  "WelcomePage_p4": "Есть вопросы по навигации?",
  "WelcomePage_p5": "Найдите исчерпывающие ответы в документации прямо в приложении.",
  "WelcomePage_p6": "Начните свое исследование GraphQL API прямо сейчас в песочнице!",
  "AboutCourse": "О курсе:",
  "CourseIncludes": "Курс включает в себя:",
  "Routing": "Маршрутизацию",
  "TestsContextAPI": "Тесты / Context API",
  "ReduxRTK": "Redux. Redux Toolkit. RTK Query",
  "NextJSSSRSSG": "NextJS / SSR / SSG",
  "FormsValidation": "Валидацию форм. React hook form. Yup",
  "Developers": "Разработчики:",
  "Angelina": "Ангелина",
  "Role": "Роль:",
  "ProjectSetup": "Настройка проекта",
  "DocumentationExplorer": "Обозреватель документации",
  "VariablesSection": "Раздел переменных",
  "Localization": "Локализация",
  "Alexey": "Алексей",
  "StylesAndDesign": "Стили и дизайн",
  "RegistrationPage": "Страница регистрации",
  "ChangeEndpointSection": "Раздел изменения конечной точки",
  "Alena": "Алена",
  "QueryEditor": "Редактор запросов",
  "LoginPage": "Страница входа",
  "Prettifying": "Форматирование",
  "ResponseSection": "Раздел ответа",
  "HowToUseGraphQLPlayground": "Как использовать GraphQL Playground?",
  "PlaygroundDescription": "GraphQL Playground - это интерактивный веб-инструмент, который позволяет вам исследовать и взаимодействовать с GraphQL API. Он предоставляет удобный интерфейс для тестирования запросов, мутаций и подписок.",
  "WriteYourQueryOrMutation": "Написание вашего запроса или мутации",
  "ExampleQuery": "Пример запроса:",
  "ExampleQueryCode": "query {\n  user(id: 1) {\n    name\n    email\n  }\n}",
  "UseVariables": "Использование переменных",
  "VariablesDescription": "GraphQL Playground поддерживает переменные среды, что позволяет вам параметризовать ваши запросы и мутации. Это полезно для тестирования различных сценариев без непосредственного изменения ваших запросов.",
  "ExampleWithVariables": "Пример с переменными:",
  "ExampleWithVariablesCode": "query($id: ID!) {\n  user(id: $id) {\n    name\n    id\n  }\n}",
  "VariablesCode": "{\n  \"id\": 1\n}"
}
